(#3 #f #14 schelog:using-slib? #8)(#2 schelog:using-slib? #10 (#3 () #7 #4 (#3 () #7 #3 rev2-procedures #15 #2 require #5 #3 () #7 #3 common-list-functions #15 #2 require #5 #2 nreverse #14 reverse! #3 () #7 #3 mbe #15 #2 require #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #8) #8) #8)(#2 call-with-current-continuation #14 schelog:call/cc #8)(#3 "ref" #14 schelog:*ref* #8)(#3 _ #14 schelog:*unbound* #8)(#4 (#3 () #7 #3 () #7 #1 (0 . 0) #15 #2 null? #5 #9 (#2 schelog:*unbound* #8) (#3 () #7 #1 (0 . 0) #15 #2 car #6 #8) #15 #2 schelog:*ref* #15 #2 vector #6 #8) #14 schelog:make-ref #8)(#2 schelog:make-ref #14 _ #8)(#4 (#3 () #7 #4 (#3 () #7 #2 schelog:*ref* #15 #3 () #7 #3 0 #15 #0 (1 . 0) #15 #2 vector-ref #5 #15 #2 eq? #6 #8) #15 #3 () #7 #0 (0 . 0) #15 #2 vector? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #6 #8) #14 schelog:ref? #8)(#4 (#3 () #7 #3 1 #15 #0 (0 . 0) #15 #2 vector-ref #6 #8) #14 schelog:deref #8)(#4 (#3 () #7 #0 (0 . 1) #15 #3 1 #15 #0 (0 . 0) #15 #2 vector-set! #6 #8) #14 schelog:set-ref! #8)(#4 (#3 () #7 #2 schelog:*unbound* #15 #3 () #7 #0 (0 . 0) #15 #2 schelog:deref #5 #15 #2 eq? #6 #8) #14 schelog:unbound-ref? #8)(#4 (#3 () #7 #2 schelog:*unbound* #15 #0 (0 . 0) #15 #2 schelog:set-ref! #6 #8) #14 schelog:unbind-ref! #8)(#3 "frozen" #14 schelog:*frozen* #8)(#4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #2 schelog:*frozen* #15 #2 vector #5 #15 #2 schelog:make-ref #6 #8) #14 schelog:freeze-ref #8)(#4 (#3 () #7 #3 1 #15 #3 () #7 #0 (0 . 0) #15 #2 schelog:deref #5 #15 #2 vector-ref #6 #8) #14 schelog:thaw-frozen-ref #8)(#4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #2 schelog:deref #5 #15 #4 (#3 () #7 #4 (#3 () #7 #2 schelog:*frozen* #15 #3 () #7 #3 0 #15 #0 (1 . 0) #15 #2 vector-ref #5 #15 #2 eq? #6 #8) #15 #3 () #7 #0 (0 . 0) #15 #2 vector? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #6 #8) #6 #8) #14 schelog:frozen-ref? #8)(#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#0 (1 . 0) #8) (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 schelog:deref #5 #15 #2 schelog:deref* #6 #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #2 schelog:deref* #5 #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #2 schelog:deref* #5 #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 vector->list #5 #15 #2 schelog:deref* #15 #2 map #5 #15 #2 list->vector #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#0 (1 . 0) #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #14 schelog:deref* #8)(#3 () #14 schelog:*logic-variables* #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (letref (x ...) . e) #15 #3 (letref schelog:*logic-variables*) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cddr #5 #15 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 (schelog:*logic-variables*) #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #3 list #15 #2 cons #5 #15 #2 cons #5 #15 #3 append! #15 #2 cons #5 #15 #2 cons #5 #15 #3 schelog:*logic-variables* #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 let #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #4 (#3 () #7 #3 ((schelog:make-ref)) #15 #0 (0 . 0) #15 #2 cons #6 #8) #15 #2 map #5 #15 #2 cons #5 #15 #3 let #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 letref #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 letref #15 #2 put #5 #3 letref #8) #6 #8)(#4 (#4 (#3 () #7 #3 () #15 #3 () #15 #4 (#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:unbind-ref! #15 #2 for-each #5 #3 () #7 #3 fail #15 #0 (2 . 0) #6 #8) #11 (0 . 0) #4 (#3 () #7 #0 (0 . 1) #15 #0 (0 . 0) #15 #2 eqv? #5 #10 (#3 () #7 #4 (#0 (1 . 2) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #0 (2 . 0) #15 #2 schelog:set-ref! #5 #3 () #7 #0 (2 . 2) #15 #0 (2 . 0) #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (3 . 1) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (4 . 0) #15 #0 (4 . 1) #15 #2 schelog:set-ref! #5 #3 () #7 #0 (4 . 2) #15 #0 (4 . 1) #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (3 . 1) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (4 . 2) #15 #0 (5 . 0) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (4 . 2) #15 #3 () #7 #0 (4 . 1) #15 #2 schelog:deref #5 #15 #0 (4 . 0) #15 #0 (5 . 1) #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (3 . 2) #15 #0 (4 . 0) #6 #8) #6 #8) (#3 () #8) #8) #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 2) #15 #0 (2 . 1) #15 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #0 (3 . 1) #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 1) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 2) #15 #0 (1 . 0) #15 #0 (1 . 1) #15 #0 (2 . 1) #6 #8) #6 #8) (#3 () #7 #4 (#3 () #7 #0 (1 . 1) #15 #2 pair? #6 #8) #15 #3 () #7 #0 (0 . 0) #15 #2 pair? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 2) #15 #3 () #7 #0 (1 . 1) #15 #2 car #5 #15 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #0 (2 . 1) #5 #15 #3 () #7 #0 (1 . 1) #15 #2 cdr #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #0 (2 . 1) #6 #8) #6 #8) (#3 () #7 #4 (#3 () #7 #0 (1 . 1) #15 #2 vector? #6 #8) #15 #3 () #7 #0 (0 . 0) #15 #2 vector? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 2) #15 #3 () #7 #0 (1 . 1) #15 #2 vector->list #5 #15 #3 () #7 #0 (1 . 0) #15 #2 vector->list #5 #15 #0 (2 . 1) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 2) #15 #2 schelog:unbind-ref! #15 #2 for-each #5 #3 () #7 #3 fail #15 #0 (3 . 0) #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #8) #8) #11 (0 . 1) #3 () #7 #3 () #7 #3 () #15 #0 (2 . 1) #15 #0 (2 . 0) #15 #0 (0 . 1) #5 #15 #4 (#4 (#3 () #7 #0 (1 . 0) #15 #0 (2 . 0) #6 #8) #8) #6 #8) #6 #8) #8) #14 schelog:unify #8)(#2 schelog:unify #14 == #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%or g ...) #15 #3 (%or) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 ((__fk 'fail)) #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 (__fk) #15 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 0) #15 #2 cons #5 #15 #3 schelog:deref* #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 __sk #15 #2 cons #5 #15 #2 cons #5 #15 #3 (__fk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 call-with-current-continuation #15 #2 cons #6 #8) #15 #2 map #5 #15 #2 append #5 #15 #3 (__sk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 call-with-current-continuation #15 #2 cons #5 #15 #2 cons #5 #15 #3 (__fk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %or #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %or #15 #2 put #5 #3 %or #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%and g ...) #15 #3 (%and) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 (__fk) #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 (__fk) #15 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 0) #15 #2 cons #5 #15 #3 schelog:deref* #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 __fk #15 #2 cons #6 #8) #15 #2 map #5 #15 #2 cons #5 #15 #3 let* #15 #2 cons #5 #15 #2 cons #5 #15 #3 (__fk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %and #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %and #15 #2 put #5 #3 %and #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%cut g) #15 #3 (%cut !) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 (__fk) #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 schelog:deref* #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 ((! (lambda (__fk2) __fk))) #15 #2 cons #5 #15 #3 let #15 #2 cons #5 #15 #2 cons #5 #15 #3 (__fk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %cut #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %cut #15 #2 put #5 #3 %cut #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (rel (v ...) ((a ...) subgoal ...) ...) #15 #3 (rel !) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 ((__fk 'fail)) #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cddr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 ((__sk __fk)) #15 #3 () #7 #3 () #7 #3 () #7 #0 (0 . 0) #15 #2 cdr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 (__fk) #15 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 0) #15 #2 cons #5 #15 #3 schelog:deref* #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 __fk #15 #2 cons #6 #8) #15 #2 map #5 #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 (__fk) #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #0 (0 . 0) #15 #2 car #5 #15 #3 list #15 #2 cons #5 #15 #2 cons #5 #15 #3 __fmls #15 #2 cons #5 #15 #3 schelog:unify #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 __fk #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 let* #15 #2 cons #5 #15 #2 cons #5 #15 #3 (__fk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 call-with-current-continuation #15 #2 cons #6 #8) #15 #2 map #5 #15 #2 append #5 #15 #3 (__sk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 call-with-current-continuation #15 #2 cons #5 #15 #2 cons #5 #15 #3 ((! (lambda (fk1) __fk))) #15 #2 cons #5 #15 #3 let #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 letref #15 #2 cons #5 #15 #2 cons #5 #15 #3 (__fk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 __fmls #15 #2 cons #5 #15 #3 lambda #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 rel #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 rel #15 #2 put #5 #3 rel #8) #6 #8)(#4 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) #14 %fail #8)(#4 (#0 (0 . 0) #8) #14 %true #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%is v e) #15 #3 (%is quote) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 (__fk) #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 (__fk) #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 (1) #15 #2 cons #5 #15 #3 %is #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 == #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 (__fk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #3 (%is (1) 'x fk) #15 #3 (%is quote) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdaddr #5 #15 #2 car #5 #15 #2 cons #5 #15 #3 quote #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #3 (%is (1) (x ...) fk) #15 #3 (%is quote) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (2 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #0 (0 . 0) #15 #2 cons #5 #15 #3 (1) #15 #2 cons #5 #15 #3 %is #15 #2 cons #6 #8) #15 #2 map #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #3 (%is (1) x fk) #15 #3 (%is quote) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 schelog:deref* #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 ('fail) #15 #3 () #7 #0 (1 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 schelog:unbound-ref? #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 schelog:ref? #15 #2 cons #5 #15 #2 cons #5 #15 #3 and #15 #2 cons #5 #15 #2 cons #5 #15 #3 if #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %is #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %is #15 #2 put #5 #3 %is #8) #6 #8)(#4 (#4 (#4 (#3 () #7 #0 (0 . 0) #15 #3 () #7 #3 () #7 #3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #2 schelog:unbound-ref? #6 #8) #15 #3 () #7 #0 (1 . 1) #15 #2 schelog:ref? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #5 #9 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) (#3 () #7 #0 (1 . 1) #15 #2 schelog:deref* #6 #8) #15 #3 () #7 #4 (#3 () #7 #0 (2 . 0) #15 #2 schelog:unbound-ref? #6 #8) #15 #3 () #7 #0 (1 . 0) #15 #2 schelog:ref? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #5 #9 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:deref* #6 #8) #15 #3 () #7 #4 (#3 () #7 #0 (3 . 0) #15 #2 schelog:unbound-ref? #6 #8) #15 #3 () #7 #0 (2 . 0) #15 #2 schelog:ref? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #5 #9 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) (#3 () #7 #0 (2 . 0) #15 #2 schelog:deref* #6 #8) #5 #15 #3 #t #15 #2 == #5 #6 #8) #8) #8) #14 schelog:make-binary-arithmetic-relation #8)(#3 () #7 #2 = #15 #2 schelog:make-binary-arithmetic-relation #5 #14 %eq #8)(#3 () #7 #2 > #15 #2 schelog:make-binary-arithmetic-relation #5 #14 %gt #8)(#3 () #7 #2 >= #15 #2 schelog:make-binary-arithmetic-relation #5 #14 %ge #8)(#3 () #7 #2 < #15 #2 schelog:make-binary-arithmetic-relation #5 #14 %lt #8)(#3 () #7 #2 <= #15 #2 schelog:make-binary-arithmetic-relation #5 #14 %le #8)(#3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 1) #15 #0 (0 . 0) #15 #2 = #5 #15 #2 not #6 #8) #15 #2 schelog:make-binary-arithmetic-relation #5 #14 %ne #8)(#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 #t #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #2 schelog:constant? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #t #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #14 schelog:constant? #8)(#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #2 schelog:compound? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 #t #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 #t #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #14 schelog:compound? #8)(#4 (#4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:constant? #5 #10 (#0 (0 . 0) #8) (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) #8) #8) #14 %constant #8)(#4 (#4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:compound? #5 #10 (#0 (0 . 0) #8) (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) #8) #8) #14 %compound #8)(#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 #t #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #2 schelog:var? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 cdr #5 #15 #2 schelog:var? #6 #8) #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #2 schelog:var? #5 #15 #4 (#0 (0 . 0) #10 (#0 (0 . 0) #8) (#3 () #7 #0 (0 . 1) #6 #8) #8) #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 vector->list #5 #15 #2 schelog:var? #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #14 schelog:var? #8)(#4 (#4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:var? #5 #10 (#0 (0 . 0) #8) (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) #8) #8) #14 %var #8)(#4 (#4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:var? #5 #10 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) (#0 (0 . 0) #8) #8) #8) #14 %nonvar #8)(#4 (#4 (#4 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 #f #15 #0 (1 . 0) #6 #8) #15 #3 () #7 #1 (2 . 0) #15 #0 (3 . 0) #15 #2 apply #5 #6 #8) #15 #2 call-with-current-continuation #5 #10 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) (#0 (0 . 0) #8) #8) #8) #8) #14 schelog:make-negation #8)(#3 () #7 #2 schelog:unify #15 #2 schelog:make-negation #5 #14 %notunify #8)(#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (3 . 1) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (4 . 1) #15 #0 (4 . 0) #15 #2 eq? #6 #8) #6 #8) (#3 () #7 #0 (3 . 1) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (4 . 1) #15 #2 schelog:deref #5 #15 #0 (4 . 0) #15 #2 schelog:ident? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #8) #8) #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (3 . 1) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (3 . 1) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (4 . 1) #15 #0 (4 . 0) #15 #2 eq? #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (4 . 1) #15 #2 schelog:deref #5 #15 #0 (4 . 0) #15 #2 schelog:ident? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #8) #8) #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #2 schelog:ident? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 1) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (2 . 1) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (3 . 1) #15 #2 schelog:deref #5 #15 #0 (3 . 0) #15 #2 schelog:ident? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (1 . 1) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (3 . 1) #15 #2 cdr #5 #15 #3 () #7 #0 (3 . 0) #15 #2 cdr #5 #15 #2 schelog:ident? #6 #8) #15 #3 () #7 #3 () #7 #0 (2 . 1) #15 #2 car #5 #15 #3 () #7 #0 (2 . 0) #15 #2 car #5 #15 #2 schelog:ident? #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 1) #6 #8) (#0 (0 . 0) #8) #8) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 1) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (2 . 1) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (3 . 1) #15 #2 schelog:deref #5 #15 #0 (3 . 0) #15 #2 schelog:ident? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (1 . 1) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 1) #15 #2 vector->list #5 #15 #3 () #7 #0 (2 . 0) #15 #2 vector->list #5 #15 #2 schelog:ident? #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 1) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (2 . 1) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (3 . 1) #15 #2 schelog:deref #5 #15 #0 (3 . 0) #15 #2 schelog:ident? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (1 . 1) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#3 () #7 #0 (1 . 1) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 #f #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 1) #15 #0 (2 . 0) #15 #2 eqv? #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #14 schelog:ident? #8)(#4 (#4 (#3 () #7 #0 (1 . 1) #15 #0 (1 . 0) #15 #2 schelog:ident? #5 #10 (#0 (0 . 0) #8) (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) #8) #8) #14 %ident #8)(#4 (#4 (#3 () #7 #0 (1 . 1) #15 #0 (1 . 0) #15 #2 schelog:ident? #5 #10 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) (#0 (0 . 0) #8) #8) #8) #14 %notident #8)(#4 (#3 () #7 #3 () #15 #4 (#3 () #7 #0 (1 . 0) #15 #3 () #7 #3 () #15 #4 (#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (2 . 0) #15 #2 schelog:frozen-ref? #6 #8) #15 #3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #15 #4 (#0 (0 . 0) #10 (#0 (0 . 0) #8) (#3 () #7 #0 (0 . 1) #6 #8) #8) #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (4 . 0) #15 #0 (2 . 0) #15 #2 assq #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 0) #15 #2 cdr #6 #8) (#3 () #7 #3 () #7 #0 (3 . 0) #15 #2 schelog:freeze-ref #5 #15 #4 (#3 () #7 #0 (6 . 0) #15 #3 () #7 #0 (0 . 0) #15 #0 (4 . 0) #15 #2 cons #5 #15 #2 cons #5 #11 (6 . 0) #0 (0 . 0) #8) #6 #8) #8) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #0 (3 . 0) #6 #8) #6 #8) (#3 () #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #0 (2 . 0) #5 #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #0 (2 . 0) #5 #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 vector->list #5 #15 #0 (2 . 0) #15 #2 map #5 #15 #2 list->vector #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#0 (1 . 0) #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #11 (0 . 0) #8) #5 #6 #8) #6 #8) #14 schelog:freeze #8)(#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#0 (2 . 0) #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 0) #15 #2 schelog:thaw-frozen-ref #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #2 schelog:melt #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #2 schelog:melt #5 #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #2 schelog:melt #5 #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 vector->list #5 #15 #2 schelog:melt #15 #2 map #5 #15 #2 list->vector #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#0 (1 . 0) #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #14 schelog:melt #8)(#4 (#3 () #7 #3 () #15 #4 (#3 () #7 #0 (1 . 0) #15 #3 () #7 #3 () #15 #4 (#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#0 (2 . 0) #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (4 . 0) #15 #0 (2 . 0) #15 #2 assq #5 #15 #4 (#0 (0 . 0) #10 (#3 () #7 #0 (0 . 0) #15 #2 cdr #6 #8) (#3 () #7 #3 () #7 #2 schelog:make-ref #5 #15 #4 (#3 () #7 #0 (6 . 0) #15 #3 () #7 #0 (0 . 0) #15 #0 (4 . 0) #15 #2 cons #5 #15 #2 cons #5 #11 (6 . 0) #0 (0 . 0) #8) #6 #8) #8) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #0 (3 . 0) #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #0 (2 . 0) #5 #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #0 (2 . 0) #5 #15 #2 cons #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 vector->list #5 #15 #0 (2 . 0) #15 #2 map #5 #15 #2 list->vector #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#0 (1 . 0) #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #11 (0 . 0) #8) #5 #6 #8) #6 #8) #14 schelog:melt-new #8)(#4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #2 schelog:freeze #5 #15 #2 schelog:melt-new #6 #8) #14 schelog:copy #8)(#4 (#4 (#3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (1 . 1) #15 #3 () #7 #0 (1 . 0) #15 #2 schelog:freeze #5 #15 #2 schelog:unify #5 #6 #8) #8) #14 %freeze #8)(#4 (#4 (#3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (1 . 1) #15 #3 () #7 #0 (1 . 0) #15 #2 schelog:melt #5 #15 #2 schelog:unify #5 #6 #8) #8) #14 %melt #8)(#4 (#4 (#3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (1 . 1) #15 #3 () #7 #0 (1 . 0) #15 #2 schelog:melt-new #5 #15 #2 schelog:unify #5 #6 #8) #8) #14 %melt-new #8)(#4 (#4 (#3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (1 . 1) #15 #3 () #7 #0 (1 . 0) #15 #2 schelog:copy #5 #15 #2 schelog:unify #5 #6 #8) #8) #14 %copy #8)(#4 (#4 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 #f #15 #0 (1 . 0) #6 #8) #15 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref* #5 #6 #8) #15 #2 call-with-current-continuation #5 #10 (#3 () #7 #3 fail #15 #0 (0 . 0) #6 #8) (#0 (0 . 0) #8) #8) #8) #14 %not #8)(#4 (#3 () #7 #0 (0 . 1) #15 #0 (0 . 0) #15 #2 member #5 #10 (#0 (0 . 1) #8) (#3 () #7 #0 (0 . 1) #15 #0 (0 . 0) #15 #2 cons #6 #8) #8) #14 schelog:set-cons #8)(#4 (#3 () #7 #3 () #15 #4 (#3 () #7 #1 (1 . 1) #15 #3 () #7 #3 () #15 #4 (#4 (#3 () #7 #0 (0 . 0) #15 #2 null? #5 #10 (#3 () #7 #4 (#3 skip #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #0 (2 . 0) #5 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #0 (2 . 0) #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (4 . 0) #15 #0 (2 . 0) #15 #2 memq #5 #10 (#3 skip #8) (#3 () #7 #0 (4 . 0) #15 #0 (2 . 0) #15 #2 cons #5 #11 (4 . 0) #8) #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 skip #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #0 (3 . 0) #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 vector-length #5 #15 #4 (#3 () #7 #3 0 #15 #3 () #7 #3 () #15 #4 (#4 (#3 () #7 #0 (2 . 0) #15 #0 (0 . 0) #15 #2 >= #5 #10 (#3 () #7 #4 (#3 () #8) #6 #8) (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #0 (5 . 0) #15 #2 vector-ref #5 #15 #0 (6 . 0) #5 #3 () #7 #3 () #7 #3 1 #15 #0 (1 . 0) #15 #2 + #5 #15 #0 (2 . 0) #6 #8) #6 #8) #8) #11 (0 . 0) #8) #5 #6 #8) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 skip #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #8) #11 (0 . 0) #8) #5 #5 #3 () #7 #3 () #15 #4 (#3 () #7 #0 (2 . 0) #15 #3 () #7 #3 () #15 #4 (#4 (#3 () #7 #0 (0 . 0) #15 #2 null? #5 #10 (#3 () #7 #4 (#3 skip #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 pair? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #0 (2 . 0) #5 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cdr #5 #15 #0 (2 . 0) #6 #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 schelog:ref? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #2 schelog:unbound-ref? #5 #10 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (5 . 0) #15 #0 (3 . 0) #15 #2 memq #6 #8) #15 #3 () #7 #0 (5 . 0) #15 #0 (2 . 0) #15 #2 memq #5 #15 #4 (#0 (0 . 0) #10 (#0 (0 . 0) #8) (#3 () #7 #0 (0 . 1) #6 #8) #8) #5 #10 (#3 skip #8) (#3 () #7 #0 (4 . 0) #15 #0 (2 . 0) #15 #2 cons #5 #11 (4 . 0) #8) #8) #6 #8) (#3 () #7 #0 (1 . 0) #15 #2 schelog:frozen-ref? #5 #10 (#3 () #7 #4 (#3 skip #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (2 . 0) #15 #2 schelog:deref #5 #15 #0 (3 . 0) #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #6 #8) (#3 () #7 #0 (0 . 0) #15 #2 vector? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 vector-length #5 #15 #4 (#3 () #7 #3 0 #15 #3 () #7 #3 () #15 #4 (#4 (#3 () #7 #0 (2 . 0) #15 #0 (0 . 0) #15 #2 >= #5 #10 (#3 () #7 #4 (#3 () #8) #6 #8) (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #0 (5 . 0) #15 #2 vector-ref #5 #15 #0 (6 . 0) #5 #3 () #7 #3 () #7 #3 1 #15 #0 (1 . 0) #15 #2 + #5 #15 #0 (2 . 0) #6 #8) #6 #8) #8) #11 (0 . 0) #8) #5 #6 #8) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 skip #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #8) #11 (0 . 0) #8) #5 #5 #0 (0 . 0) #8) #6 #8) #6 #8) #14 schelog:find-unbounds #8)(#4 (#3 () #7 #0 (0 . 0) #15 #2 schelog:unbind-ref! #15 #2 for-each #6 #8) #14 schelog:restore-unbounds #8)(#4 (#4 (#4 (#3 () #7 #3 () #7 #0 (1 . 3) #15 #0 (1 . 0) #15 #0 (1 . 1) #15 #2 schelog:find-unbounds #5 #15 #4 (#3 () #7 #3 () #7 #4 (#3 () #7 #3 () #15 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 reverse! #5 #15 #4 (#3 () #11 (2 . 0) #3 () #7 #0 (0 . 0) #15 #0 (3 . 0) #6 #8) #6 #8) #15 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #0 (5 . 2) #5 #15 #4 (#3 () #7 #4 (#3 () #7 #0 (3 . 0) #15 #3 () #7 #0 (7 . 0) #15 #2 schelog:deref* #5 #15 #0 (8 . 0) #5 #11 (3 . 0) #3 () #7 #3 retry #15 #0 (1 . 0) #6 #8) #6 #8) #6 #8) #6 #8) #6 #8) #15 #2 call-with-current-continuation #5 #15 #4 (#3 () #7 #4 (#3 () #7 #0 (2 . 0) #15 #2 schelog:restore-unbounds #5 #3 () #7 #0 (3 . 0) #15 #3 () #7 #0 (4 . 3) #15 #0 (1 . 0) #15 #2 schelog:unify #5 #6 #8) #6 #8) #6 #8) #6 #8) #8) #8) #14 schelog:make-bag-of #8)(#3 () #7 #2 cons #15 #2 schelog:make-bag-of #5 #14 schelog:bag-of #8)(#3 () #7 #2 schelog:set-cons #15 #2 schelog:make-bag-of #5 #14 schelog:set-of #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%bag-of x goal bag) #15 #3 (%bag-of) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 schelog:*logic-variables* #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 schelog:bag-of #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %bag-of #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %bag-of #15 #2 put #5 #3 %bag-of #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%set-of x goal set) #15 #3 (%set-of) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 schelog:*logic-variables* #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 schelog:set-of #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %set-of #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %set-of #15 #2 put #5 #3 %set-of #8) #6 #8)(#3 (define-syntax %exists (syntax-rules () ((%exists y goal) (%and (letref (__tmp) (%bag-of y goal __tmp)) %true)))) #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%exists y goal) #15 #3 (%exists) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 schelog:copy #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 let #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %exists #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %exists #15 #2 put #5 #3 %exists #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%bag-of-1 x g ii) #15 #3 (%bag-of-1) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 ((cons (_) (_))) #15 #3 () #7 #0 (1 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #3 schelog:unify #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 %bag-of #15 #2 cons #5 #15 #2 cons #5 #15 #3 %and #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %bag-of-1 #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %bag-of-1 #15 #2 put #5 #3 %bag-of-1 #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (%set-of-1 x g ii) #15 #3 (%set-of-1) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 ((cons (_) (_))) #15 #3 () #7 #0 (1 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #3 schelog:unify #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 cadddr #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 %set-of #15 #2 cons #5 #15 #2 cons #5 #15 #3 %and #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 %set-of-1 #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 %set-of-1 #15 #2 put #5 #3 %set-of-1 #8) #6 #8)(#3 forward #14 schelog:*more-k* #8)(#3 forward #14 schelog:*more-fk* #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #0 (0 . 0) #15 #3 (which (v ...) g) #15 #3 (which schelog:*more-k* schelog:*more-fk*) #15 #2 syntax-match? #5 #10 (#3 () #7 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #3 list #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 quote #15 #2 cons #5 #15 #2 cons #5 #15 #3 (lambda (nam val) (list nam (schelog:deref* val))) #15 #2 cons #5 #15 #3 map #15 #2 cons #5 #15 #2 cons #5 #15 #3 schelog:*more-k* #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 ((lambda (d) (set! schelog:*more-fk* #f) (schelog:*more-k* #f))) #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #0 (1 . 0) #15 #2 caddr #5 #15 #2 cons #5 #15 #3 schelog:deref* #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 schelog:*more-fk* #15 #2 cons #5 #15 #3 set! #15 #2 cons #5 #15 #2 cons #5 #15 #3 (set! schelog:*more-k* __qk) #15 #2 cons #5 #15 #3 (__qk) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 call-with-current-continuation #15 #2 cons #5 #15 #2 cons #5 #15 #3 () #7 #0 (1 . 0) #15 #2 cadr #5 #15 #2 cons #5 #15 #3 letref #15 #2 cons #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "invalid syntax " #15 #3 which #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #15 #3 %macro-special-form% #15 #3 which #15 #2 put #5 #3 which #8) #6 #8)(#4 (#3 () #7 #4 (#0 (0 . 0) #13 schelog:*more-k* #2 schelog:*more-fk* #10 (#3 () #7 #3 more #15 #2 schelog:*more-fk* #6 #8) (#3 #f #8) #8) #15 #2 call-with-current-continuation #6 #8) #14 more #8)(#4 (#3 () #7 #3 () #7 #2 schelog:make-ref #5 #15 #3 () #7 #2 schelog:make-ref #5 #15 #3 () #7 #2 schelog:make-ref #5 #15 #4 (#3 () #7 #3 () #7 #2 schelog:*logic-variables* #15 #3 () #7 #0 (0 . 2) #15 #0 (0 . 1) #15 #0 (0 . 0) #15 #2 list #5 #15 #2 append! #5 #15 #4 (#4 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #3 () #7 #3 () #7 #0 (4 . 0) #15 #0 (5 . 0) #15 #2 cons #5 #15 #0 (5 . 1) #15 #2 == #5 #15 #2 schelog:deref* #5 #5 #15 #0 (1 . 0) #6 #8) #15 #2 call-with-current-continuation #5 #3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #3 () #7 #3 () #7 #0 (5 . 2) #15 #0 (5 . 1) #15 #2 cons #5 #15 #0 (6 . 1) #15 #2 == #5 #15 #2 schelog:deref* #5 #5 #15 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #3 () #7 #0 (6 . 2) #15 #0 (7 . 0) #15 #2 %member #5 #15 #2 schelog:deref* #5 #5 #15 #4 (#3 () #7 #4 (#0 (1 . 0) #8) #6 #8) #6 #8) #6 #8) #15 #2 schelog:deref* #5 #5 #15 #0 (1 . 0) #6 #8) #15 #2 call-with-current-continuation #5 #3 () #7 #3 fail #15 #0 (1 . 0) #6 #8) #15 #2 call-with-current-continuation #6 #8) #8) #6 #8) #6 #8) #14 %member #8)(#4 (#4 (#3 () #7 #4 (#0 (1 . 0) #8) #15 #4 (#3 () #7 #0 (1 . 0) #15 #3 () #7 #4 (#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (6 . 0) #15 #2 schelog:deref* #5 #5 #15 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (5 . 0) #15 #2 schelog:deref* #5 #5 #15 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (8 . 1) #15 #2 schelog:deref* #5 #5 #15 #4 (#3 () #7 #4 (#0 (1 . 0) #8) #6 #8) #6 #8) #6 #8) #6 #8) #15 #2 schelog:deref* #5 #5 #15 #0 (1 . 0) #6 #8) #15 #2 call-with-current-continuation #5 #3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #3 () #7 #0 (5 . 2) #15 #2 schelog:deref* #5 #5 #15 #0 (1 . 0) #6 #8) #15 #2 call-with-current-continuation #5 #3 () #7 #3 fail #15 #0 (1 . 0) #6 #8) #15 #2 call-with-current-continuation #6 #8) #15 #2 schelog:deref* #5 #6 #8) #6 #8) #8) #14 %if-then-else #8)(#3 (define %member (rel (x xs y ys) ((x (cons x xs))) ((x (cons y ys)) (%member x ys)))) #8)(#3 (define %if-then-else (rel (p q r) ((p q r) p ! q) ((p q r) r))) #8)