(#4 (#3 () #7 #3 () #15 #3 () #15 #3 () #15 #3 () #15 #3 () #15 #3 () #15 #3 () #15 #3 () #15 #4 (#3 () #11 (0 . 0) #4 (#3 () #7 #0 (1 . 0) #15 #0 (0 . 0) #15 #2 cons #5 #11 (1 . 0) #8) #11 (0 . 1) #4 (#3 () #7 #0 (1 . 0) #15 #2 null? #5 #10 (#3 () #7 #3 "Empty stack -- POP" #15 #2 error #6 #8) (#3 () #7 #3 () #7 #0 (1 . 0) #15 #2 car #5 #15 #4 (#3 () #7 #0 (2 . 0) #15 #2 cdr #5 #11 (2 . 0) #0 (0 . 0) #8) #6 #8) #8) #11 (0 . 2) #4 (#3 () #7 #0 (1 . 0) #15 #2 null? #6 #8) #11 (0 . 3) #4 (#3 () #7 #0 (1 . 0) #15 #2 write #6 #8) #11 (0 . 4) #4 (#0 (1 . 0) #8) #11 (0 . 5) #4 (#3 () #11 (1 . 0) #8) #11 (0 . 6) #4 (#3 () #7 #3 push #15 #0 (0 . 0) #15 #2 eq? #5 #10 (#3 () #7 #4 (#0 (2 . 1) #8) #6 #8) (#3 () #7 #3 pop #15 #0 (0 . 0) #15 #2 eq? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 2) #6 #8) #6 #8) (#3 () #7 #3 empty? #15 #0 (0 . 0) #15 #2 eq? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 3) #6 #8) #6 #8) (#3 () #7 #3 print #15 #0 (0 . 0) #15 #2 eq? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 4) #6 #8) #6 #8) (#3 () #7 #3 stack->list #15 #0 (0 . 0) #15 #2 eq? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 5) #6 #8) #6 #8) (#3 () #7 #3 initialize #15 #0 (0 . 0) #15 #2 eq? #5 #10 (#3 () #7 #4 (#3 () #7 #0 (2 . 6) #6 #8) #6 #8) (#2 else #10 (#3 () #7 #4 (#3 () #7 #0 (1 . 0) #15 #3 "Unknown request -- STACK" #15 #2 error #6 #8) #6 #8) (#3 () #8) #8) #8) #8) #8) #8) #8) #8) #11 (0 . 7) #0 (0 . 7) #8) #6 #8) #14 make-stack #8)(#4 (#3 () #7 #0 (0 . 1) #15 #3 () #7 #3 push #15 #0 (0 . 0) #5 #6 #8) #14 push #8)(#4 (#3 () #7 #3 pop #15 #0 (0 . 0) #6 #8) #14 pop #8)(#4 (#3 () #7 #3 empty? #15 #0 (0 . 0) #6 #8) #14 empty? #8)(#4 (#3 () #7 #3 initialize #15 #0 (0 . 0) #6 #8) #14 initialize #8)(#3 () #7 #2 make-stack #5 #14 %amb-catchers-stack% #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #2 caddr #5 #15 #3 () #7 #0 (0 . 0) #15 #2 cadr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 0) #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 1) #15 #2 cons #5 #15 #3 delay #15 #2 cons #5 #15 #2 cons #5 #15 #3 -c- #15 #2 cons #5 #15 #3 cons #15 #2 cons #5 #15 #2 cons #5 #15 #3 (%amb-catchers-stack% 'push) #15 #2 cons #5 #15 #2 cons #5 #15 #3 (-c-) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 call-with-current-continuation #15 #2 cons #6 #8) #6 #8) #15 #3 %macro-special-form% #15 #3 amb #15 #2 put #5 #3 amb #8) #6 #8)(#4 (#3 () #7 #3 empty? #15 #2 %amb-catchers-stack% #5 #10 (#3 () #7 #3 "FAIL evaluated." #15 #2 error #6 #8) (#3 () #7 #3 () #7 #3 pop #15 #2 %amb-catchers-stack% #5 #15 #4 (#3 () #7 #3 () #7 #3 () #7 #0 (0 . 0) #15 #2 cdr #5 #15 #2 force #5 #15 #3 () #7 #0 (0 . 0) #15 #2 car #5 #6 #8) #6 #8) #8) #14 fail #8)(#3 () #7 #4 (#3 () #7 #4 (#3 (call-with-current-continuation (lambda (-c-) (%amb-catchers-stack% 'initialize) ((%amb-catchers-stack% 'push) (cons -c- #f)) #t)) #8) #15 #3 %macro-special-form% #15 #3 init-amb #15 #2 put #5 #3 init-amb #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #2 caddr #5 #15 #3 () #7 #0 (0 . 0) #15 #2 cadr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 0) #15 #2 cons #5 #15 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 1) #15 #2 cons #5 #15 #3 delay #15 #2 cons #5 #15 #2 cons #5 #15 #3 -c- #15 #2 cons #5 #15 #3 cons #15 #2 cons #5 #15 #2 cons #5 #15 #3 (%amb-catchers-stack% 'push) #15 #2 cons #5 #15 #2 cons #5 #15 #3 (-c-) #15 #2 cons #5 #15 #3 lambda #15 #2 cons #5 #15 #2 cons #5 #15 #3 call-with-current-continuation #15 #2 cons #6 #8) #6 #8) #15 #3 %macro-special-form% #15 #3 amb-unwind-protect #15 #2 put #5 #3 amb-unwind-protect #8) #6 #8)(#3 () #7 #4 (#3 () #7 #4 (#3 () #7 #3 () #7 #0 (0 . 0) #15 #2 cadr #5 #15 #4 (#3 () #7 #3 () #7 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 ((reverse (stack 'stack->list))) #15 #3 () #7 #3 () #7 #3 (((stack 'push) ans) (fail)) #15 #3 () #7 #3 () #15 #3 () #7 #3 () #7 #3 () #15 #0 (0 . 0) #15 #2 cons #5 #15 #3 ans #15 #2 cons #5 #15 #2 cons #5 #15 #2 cons #5 #15 #3 let #15 #2 cons #5 #15 #2 cons #5 #15 #3 amb-unwind-protect #15 #2 cons #5 #15 #2 cons #5 #15 #3 ((stack (make-stack))) #15 #2 cons #5 #15 #3 let #15 #2 cons #6 #8) #6 #8) #15 #3 %macro-special-form% #15 #3 setof #15 #2 put #5 #3 setof #8) #6 #8)